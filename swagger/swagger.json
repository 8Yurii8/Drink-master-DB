{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Drink-Master API",
    "description": "API documentation for Drink-Master application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3030",
      "description": "Local development server"
    },
    {
      "url": "https://drink-master-db.onrender.com",
      "description": "Deploy server"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "summary": "User registration",
        "tags": ["Auth"],
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Conflict (email already exists)"
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "summary": "User login",
        "tags": ["Auth"],
        "requestBody": {
          "description": "User login data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "summary": "User signout",
        "tags": ["Auth"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful signout"
          }
        }
      }
    },
    "/api/auth/current": {
      "post": {
        "summary": "Current User",
        "tags": ["Auth"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/subscribe": {
      "post": {
        "summary": "Subscribe",
        "tags": ["Subscribe"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User subscribe ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscribe is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/recipes/main-page/IN-PROCCES": {
      "post": {
        "summary": "In procces",
        "tags": ["Recepi"],
        "requestBody": {
          "description": "User subscribe data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscribe is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/recipes/:id-IN_PROCCES:": {
      "post": {
        "summary": "Get one recepi",
        "tags": ["Recepi"],
        "requestBody": {
          "description": "Get one recepi by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscribe is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/own": {
      "get": {
        "summary": "Get all own recipes",
        "tags": ["Own"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get own recipes successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/own/:id": {
      "post": {
        "summary": "Get one own recipes",
        "tags": ["Own"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Recipes id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscribe is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "your_jwt_token_here"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "john@example.com"
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "your_jwt_token_here"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "john@example.com"
              },
              "_id": {
                "type": "string",
                "example": "64eb4ef59444fa92bc724f4a"
              }
            }
          }
        }
      },
      "SubscribeRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          }
        }
      },
      "SubscribeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "You are subscribed to the newsletter from DrinkMaster"
          }
        }
      },
      "AllOwnRecipesRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64eb4ef59444fa92bc724f4a"
          }
        }
      },
      "AllOwnRecipesResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "You are subscribed to the newsletter from DrinkMaster"
          }
        }
      },
      "OneOwnRecipesRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          }
        }
      },
      "OneOwnRecipesResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "You are subscribed to the newsletter from DrinkMaster"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
